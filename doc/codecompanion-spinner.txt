*codecompanion-spinner.txt*      For NVIM v0.8.0     Last change: 2025 July 07

==============================================================================
Table of Contents                    *codecompanion-spinner-table-of-contents*

1. Lazy Loading Friendly         |codecompanion-spinner-lazy-loading-friendly|
2. Features                                   |codecompanion-spinner-features|
3. Installation                           |codecompanion-spinner-installation|
4. Customization                         |codecompanion-spinner-customization|
5. Links                                         |codecompanion-spinner-links|
A simple lualine <https://github.com/nvim-lualine/lualine.nvim> component for
CodeCompanion <https://github.com/olimorris/codecompanion.nvim>, providing a
status indicator with the number of active CodeCompanion requests.




==============================================================================
1. Lazy Loading Friendly         *codecompanion-spinner-lazy-loading-friendly*

This component is fully lazy-loading aware. The component will not load or
display unless CodeCompanion has already been loaded for some other reason.
This means you can safely include it in your lualine setup without interfering
with your plugin manager’s lazy loading optimizations.


==============================================================================
2. Features                                   *codecompanion-spinner-features*

- Displays the number of active CodeCompanion requests.
- Shows a spinner while requests are active, and a checkmark () when idle.
- Includes an icon and can be customized.


==============================================================================
3. Installation                           *codecompanion-spinner-installation*

With lazy.nvim <https://github.com/folke/lazy.nvim>

>lua
    return {
        "franco-ruggeri/codecompanion-lualine.nvim",
    }
    
    ## ⚙️ Usage
    
    After installing, use `"codecompanion"` in your lualine sections:
    
    ```lua
    sections = {
        lualine_x = {
            -- other components
            "codecompanion"
        },
    },
<


==============================================================================
4. Customization                         *codecompanion-spinner-customization*

The default options are:

>lua
    local default_options = {
     icon = " ",
     spinner_symbols = {
      "⠋",
      "⠙",
      "⠹",
      "⠸",
      "⠼",
      "⠴",
      "⠦",
      "⠧",
      "⠇",
      "⠏",
     },
     done_symbol = "✓",
    }
<

You can change them as follows:

>lua
    require('lualine').setup {
      sections = {
        lualine_c = {
          {
            "codecompanion",
            icon = " ",
            spinner_symbols = { "⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏" },
            done_symbol = "✓",
          },
        },
      },
    }
<

==============================================================================
5. Links                                         *codecompanion-spinner-links*

1. **: assets/demo.gif

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
